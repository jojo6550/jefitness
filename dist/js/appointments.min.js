let isLocalhost=["localhost","127.0.0.1"].includes(window.location.hostname),API_BASE_URL=isLocalhost?"http://localhost:10000":"https://jefitness.onrender.com";async function loadAppointments(){try{var t=await fetch(API_BASE_URL+"/api/appointments/user",{headers:{"Content-Type":"application/json",Authorization:"Bearer "+localStorage.getItem("token")}});if(!t.ok)throw new Error(`HTTP ${t.status} - `+t.statusText);displayAppointments(await t.json())}catch(t){console.error("Error loading appointments:",t),showError("Failed to load appointments. Please try again.")}}function displayAppointments(t){t=t.filter(t=>"cancelled"!==t.status);let i=document.getElementById("appointmentsTableBody");i.innerHTML="",0===t.length?i.innerHTML=`
            <tr>
                <td colspan="6" class="text-center text-muted">No appointments found</td>
            </tr>
        `:(t.forEach(t=>{var e=document.createElement("tr"),n=new Date(t.date).toLocaleDateString(),o="scheduled"===t.status?"text-success":"cancelled"===t.status?"text-danger":"text-warning",a=t.trainerId?`${t.trainerId.firstName||"N/A"} `+(t.trainerId.lastName||""):"N/A";e.innerHTML=`
            <td>${n}</td>
            <td>${t.time}</td>
            <td>${a}</td>
            <td class="${o}">${t.status}</td>
            <td>${t.notes||"N/A"}</td>
            <td>
                <button data-id="${t._id}" class="btn btn-sm btn-outline-primary view-btn">View</button>
                <button data-id="${t._id}" class="btn btn-sm btn-outline-secondary edit-btn">Edit</button>
                <button data-id="${t._id}" class="btn btn-sm btn-outline-danger delete-btn">Delete</button>
            </td>
        `,i.appendChild(e)}),document.querySelectorAll(".view-btn").forEach(t=>{t.addEventListener("click",t=>viewAppointment(t.target.dataset.id))}),document.querySelectorAll(".edit-btn").forEach(t=>{t.addEventListener("click",t=>editAppointment(t.target.dataset.id))}),document.querySelectorAll(".delete-btn").forEach(t=>{t.addEventListener("click",t=>deleteAppointment(t.target.dataset.id))}))}function showError(t){document.getElementById("appointmentsTableBody").innerHTML=`
        <tr>
            <td colspan="6" class="text-center text-danger">
                <i class="bi bi-exclamation-triangle"></i> ${t}
            </td>
        </tr>
    `}let currentViewAppointmentId=null;async function viewAppointment(t){try{currentViewAppointmentId=t;var e=await fetch(API_BASE_URL+"/api/appointments/"+t,{headers:{"Content-Type":"application/json",Authorization:"Bearer "+localStorage.getItem("token")}});if(!e.ok)throw new Error(`HTTP ${e.status} - `+e.statusText);var n=await e.json();document.getElementById("appointmentDetails").innerHTML=`
            <p><strong>Date:</strong> ${new Date(n.date).toLocaleDateString()}</p>
            <p><strong>Time:</strong> ${n.time}</p>
            <p><strong>Trainer:</strong> ${n.trainerId?n.trainerId.firstName+" "+n.trainerId.lastName:"N/A"}</p>
            <p><strong>Status:</strong> ${n.status}</p>
            <p><strong>Client:</strong> ${n.clientId?n.clientId.firstName+" "+n.clientId.lastName:"N/A"}</p>
            <p><strong>Notes:</strong> ${n.notes||"N/A"}</p>
            <p><strong>Created At:</strong> ${new Date(n.createdAt).toLocaleString()}</p>
            <p><strong>Updated At:</strong> ${new Date(n.updatedAt).toLocaleString()}</p>
        `,new bootstrap.Modal(document.getElementById("appointmentModal")).show()}catch(t){console.error("Error viewing appointment:",t),alert("Failed to load appointment details. Please try again.")}}let currentEditAppointmentId=null,editModalElement=document.getElementById("editAppointmentModal"),editModal=new bootstrap.Modal(editModalElement);function editAppointment(t){currentEditAppointmentId=t,fetch(API_BASE_URL+"/api/appointments/"+t,{headers:{"Content-Type":"application/json",Authorization:"Bearer "+localStorage.getItem("token")}}).then(t=>{if(t.ok)return t.json();throw new Error(`HTTP ${t.status} - `+t.statusText)}).then(t=>{document.getElementById("editAppointmentDate").value=new Date(t.date).toISOString().slice(0,10),document.getElementById("editAppointmentTime").value=t.time,document.getElementById("editAppointmentNotes").value=t.notes||"",editModal.show()}).catch(t=>{console.error("Error fetching appointment for edit:",t),alert("Failed to load appointment details for editing. Please try again.")})}async function deleteAppointment(t){if(confirm("Are you sure you want to delete this appointment? This action cannot be undone."))try{var e=await fetch(API_BASE_URL+"/api/appointments/"+t,{method:"DELETE",headers:{Authorization:"Bearer "+localStorage.getItem("token")}});if(!e.ok)throw new Error(`HTTP ${e.status} - `+e.statusText);loadAppointments()}catch(t){console.error("Error deleting appointment:",t),alert("Failed to delete appointment. Please try again.")}}document.getElementById("editAppointmentForm").addEventListener("submit",t=>{t.preventDefault();var t=document.getElementById("editAppointmentDate").value,e=document.getElementById("editAppointmentTime").value,n=document.getElementById("editAppointmentNotes").value;t&&e?fetch(API_BASE_URL+"/api/appointments/"+currentEditAppointmentId,{method:"PUT",headers:{"Content-Type":"application/json",Authorization:"Bearer "+localStorage.getItem("token")},body:JSON.stringify({date:t,time:e,notes:n})}).then(t=>{if(t.ok)return t.json();throw new Error(`HTTP ${t.status} - `+t.statusText)}).then(t=>{editModal.hide(),loadAppointments(),alert("Appointment updated successfully.")}).catch(t=>{console.error("Error updating appointment:",t),alert("Failed to update appointment. Please try again.")}):alert("Date and time are required.")}),document.addEventListener("DOMContentLoaded",()=>{loadAppointments();var t=document.getElementById("refreshAppointments"),t=(t&&t.addEventListener("click",loadAppointments),document.getElementById("editAppointmentBtn"));t&&t.addEventListener("click",()=>{currentViewAppointmentId&&editAppointment(currentViewAppointmentId)})});