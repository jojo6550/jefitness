document.addEventListener("DOMContentLoaded",()=>{let n=["localhost","127.0.0.1"].includes(window.location.hostname)?"http://localhost:10000":"https://jefitness.onrender.com",a=document.getElementById("nutritionForm");var e=document.getElementById("editNutritionForm");let d=document.getElementById("mealsList"),o=new bootstrap.Modal(document.getElementById("editMealModal")),l=null;async function i(){try{var e=await fetch(n+"/api/nutrition",{headers:{"Content-Type":"application/json",Authorization:"Bearer "+localStorage.getItem("token")}});if(!e.ok)throw new Error("Failed to fetch meals");var t=await e.json();a=t.nutritionLogs,d.innerHTML="",0===a.length?d.innerHTML='<p class="text-muted text-center">No meals logged yet. Start by adding your first meal!</p>':(a.sort((e,t)=>new Date(t.date)-new Date(e.date)),a.forEach(e=>{var t=document.createElement("div");t.className="list-group-item d-flex justify-content-between align-items-center",t.innerHTML=`
                <div>
                    <h6 class="mb-1">${e.foodItem}</h6>
                    <small class="text-muted">${e.mealType} â€¢ ${new Date(e.date).toLocaleDateString()}</small>
                    <div class="mt-1">
                        <span class="badge bg-primary">${e.calories} cal</span>
                        <span class="badge bg-success">${e.protein}g P</span>
                        <span class="badge bg-warning text-dark">${e.carbs}g C</span>
                        <span class="badge bg-danger">${e.fats}g F</span>
                    </div>
                </div>
                <div>
                    <button class="btn btn-sm btn-outline-primary me-2 edit-btn" data-id="${e.id}">
                        <i class="bi bi-pencil"></i>
                    </button>
                    <button class="btn btn-sm btn-outline-danger delete-btn" data-id="${e.id}">
                        <i class="bi bi-trash"></i>
                    </button>
                </div>
            `,d.appendChild(t)}),document.querySelectorAll(".edit-btn").forEach(e=>{e.addEventListener("click",e=>{var t=e.currentTarget.dataset.id,e=a;(e=e.find(e=>e.id===t))&&(l=t,document.getElementById("editMealId").value=e.id,document.getElementById("editDateInput").value=e.date,document.getElementById("editMealTypeInput").value=e.mealType,document.getElementById("editFoodItemInput").value=e.foodItem,document.getElementById("editCaloriesInput").value=e.calories,document.getElementById("editProteinInput").value=e.protein,document.getElementById("editCarbsInput").value=e.carbs,document.getElementById("editFatsInput").value=e.fats,o.show())})}),document.querySelectorAll(".delete-btn").forEach(e=>{e.addEventListener("click",e=>{(async e=>{if(confirm("Are you sure you want to delete this meal?"))try{if(!(await fetch(n+"/api/nutrition/"+e,{method:"DELETE",headers:{Authorization:"Bearer "+localStorage.getItem("token")}})).ok)throw new Error("Failed to delete meal");r("Meal deleted successfully!","success"),i()}catch(e){console.error("Error deleting meal:",e),r("Failed to delete meal. Please try again.","danger")}})(e.currentTarget.dataset.id)})}))}catch(e){console.error("Error fetching meals:",e),r("Failed to load meals. Please try again.","danger")}var a}function r(e,t){let a=document.createElement("div");a.className=`alert alert-${t} alert-dismissible fade show position-fixed`,a.style.cssText="top: 20px; right: 20px; z-index: 9999; min-width: 300px;",a.innerHTML=`
            ${e}
            <button type="button" class="btn-close" data-bs-dismiss="alert"></button>
        `,document.body.appendChild(a),setTimeout(()=>{a.remove()},5e3)}document.getElementById("dateInput").valueAsDate=new Date,a.addEventListener("submit",async e=>{e.preventDefault();e={date:document.getElementById("dateInput").value,mealType:document.getElementById("mealTypeInput").value,foodItem:document.getElementById("foodItemInput").value,calories:document.getElementById("caloriesInput").value,protein:document.getElementById("proteinInput").value,carbs:document.getElementById("carbsInput").value,fats:document.getElementById("fatsInput").value};try{var t=await fetch(n+"/api/nutrition",{method:"POST",headers:{"Content-Type":"application/json",Authorization:"Bearer "+localStorage.getItem("token")},body:JSON.stringify(e)});if(!t.ok)throw new Error("Failed to add meal");await t.json();r("Meal logged successfully!","success"),a.reset(),document.getElementById("dateInput").valueAsDate=new Date,i()}catch(e){console.error("Error adding meal:",e),r("Failed to log meal. Please try again.","danger")}}),e.addEventListener("submit",async e=>{e.preventDefault();e={date:document.getElementById("editDateInput").value,mealType:document.getElementById("editMealTypeInput").value,foodItem:document.getElementById("editFoodItemInput").value,calories:document.getElementById("editCaloriesInput").value,protein:document.getElementById("editProteinInput").value,carbs:document.getElementById("editCarbsInput").value,fats:document.getElementById("editFatsInput").value};try{var t=await fetch(n+("/api/nutrition/"+l),{method:"PUT",headers:{"Content-Type":"application/json",Authorization:"Bearer "+localStorage.getItem("token")},body:JSON.stringify(e)});if(!t.ok)throw new Error("Failed to update meal");await t.json();r("Meal updated successfully!","success"),o.hide(),i()}catch(e){console.error("Error updating meal:",e),r("Failed to update meal. Please try again.","danger")}}),i()});